package com.app.main;

import java.util.List;
import java.util.Scanner;

import com.app.exception.BusinessException;
import com.app.model.Player;
import com.app.service.PlayerSearchService;
import com.app.service.impl.PlayerSearchServiceImpl;

public class PlayerSearchMain {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Welcome to PlayerSearch App V1.0");
		System.out.println("-----------------------------------------");
		int ch = 0;
		PlayerSearchService playerSearchService = new PlayerSearchServiceImpl();
		do {
			System.out.println("PLAYER SEARCH MENU");
			System.out.println("=====================================");
			System.out.println("1) By Id");
			System.out.println("2) By Contact Number");
			System.out.println("3) By Age");
			System.out.println("4) By Gender");
			System.out.println("5) By TeamName");
			System.out.println("6) By Dob");
			System.out.println("7) By Name");
			System.out.println("8) Show All Players");
			System.out.println("9) EXIT");
			System.out.println("Please enter apppropriate choice between 1-9");
			
			//if special characters or numbers entered, it would throw an exception
			try {
			ch = Integer.parseInt(sc.nextLine());
			} catch (NumberFormatException e) {
				
			}
			
			//let the switch case do the job
			switch (ch) {
			case 1:
				System.out.println("Enter Player Id to get Player Details");
				try {
					int id = Integer.parseInt(sc.nextLine());
					//code to service layer
					Player player = playerSearchService.getPlayerById(id);
					if (player != null) {
						System.out.println("Player found with id : " +id+ " details of the player is : ");
						System.out.println(player);
					}
					else {
						System.out.println("Player not found!");
					}
				} catch (NumberFormatException e) {
					System.out.println("Player Id cannot be special character or symbols or white spaces.. It is numeric.");
				} catch (BusinessException e) {
					System.out.println(e.getMessage());
				}
				break;
				
				
			case 2:
				System.out.println("Enter Player Contact Number to get Player Details");
				try {
					long contact = Long.parseLong(sc.nextLine());
					//code to service layer
					Player player = playerSearchService.getPlayerByContact(contact);
					if (player != null) {
						System.out.println("Player found with contact number : " +contact+ " details of the player is : ");
						System.out.println(player);
					}
					else {
						System.out.println("Player not found!");
					}
				} catch (NumberFormatException e) {
					System.out.println("Player Contact Number cannot be special character or symbols or white spaces.. It is numeric.");
				} catch (BusinessException e) {
					System.out.println(e.getMessage());
				}
	
				break;
				
				
			case 3:
				System.out.println("Enter Player Age to get all the players matching with that age");
				try {
					int age =Integer.parseInt(sc.next());
					List<Player> agePlayersList = playerSearchService.getPlayersByAge(age);
					if (agePlayersList != null && agePlayersList.size() > 0) {
						System.out.println("There are " +agePlayersList.size()+ " no. of player/s... with age = " +age+ ". Printing their details...");
						for (Player p : agePlayersList) {
							System.out.println(p);
						}
					}
				} catch (NumberFormatException e) {
					System.out.println("Age cannot have special chars or spaces or alphabets");
				}
				catch (BusinessException e) {
					System.out.println(e.getMessage());
				}
				
				break;
				
				
			case 4:
				System.out.println("Enter Gender to get all the players of that team");
				String gender = sc.nextLine();
				try {
					List<Player> genderPlayersList = playerSearchService.getPlayersByGender(gender);
					if (genderPlayersList != null && genderPlayersList.size() > 0) {
						System.out.println("There is/are " +genderPlayersList.size()+ " no. of player/s... with gender = " +gender+ ". Printing their details...");
						for (Player p : genderPlayersList) {
							System.out.println(p);
						}
					}
				} catch (BusinessException e1) {
					System.out.println(e1.getMessage());
				}
	
				break;
			
			case 5:
				System.out.println("Enter TeamName to get all the players of that team");
				String teamname = sc.nextLine();
				try {
					List<Player> teamPlayersList = playerSearchService.getPlayersByTeamName(teamname);
					if (teamPlayersList != null && teamPlayersList.size() > 0) {
						System.out.println("There is/are " +teamPlayersList.size()+ " no. of player/s... with team = " +teamname+ ". Printing their details...");
						for (Player p : teamPlayersList) {
							System.out.println(p);
						}
					}
				} catch (BusinessException e1) {
					System.out.println(e1.getMessage());
				}
	
				break;
				
				
			case 6:
				System.out.println("Enter DOB to get all the players in the format yyyy/mm/dd");
				String dob = sc.nextLine();

				try {
					List<Player> dobPlayersList = playerSearchService.getPlayersByDob(dob);
	
					if (dobPlayersList != null && dobPlayersList.size() > 0) {
						System.out.println("There is/are " +dobPlayersList.size()+ " no. of player/s... with team = " +dob+ ". Printing their details...");
						for (Player p : dobPlayersList) {
							System.out.println(p);
						}
					}
				} catch (BusinessException e1) {
					System.out.println(e1.getMessage());
				}
				
				break;
				
				
			case 7:
				System.out.println("Enter Name to get all the players of that team");
				String name = sc.nextLine();
				try {
					List<Player> namePlayersList = playerSearchService.getPlayersByName(name);
					if (namePlayersList != null && namePlayersList.size() > 0) {
						System.out.println("There is/are " +namePlayersList.size()+ " no. of player/s... with team = " +name+ ". Printing their details...");
						for (Player p : namePlayersList) {
							System.out.println(p);
						}
					}
				} catch (BusinessException e1) {
					System.out.println(e1.getMessage());
				}
	
				break;
			case 8:
				System.out.println("Retry all the players from backend");
				try {
					List<Player> allPlayersList = playerSearchService.getAllPlayers();
					if (allPlayersList != null && allPlayersList.size() > 0) {
						System.out.println("There are " +allPlayersList.size()+ " no. of player/s... Printing their details...");
						for (Player p : allPlayersList) {
							System.out.println(p);
						}
					}
				} catch (BusinessException e) {
					System.out.println(e.getMessage());
				}
				
				break;
			case 9:System.out.println("Thankq for using our PlayerSearch App V1.0.... Have a good one...");
	
				break;

			default: System.out.println("Invalid menu option... Kindly retry....................!!!");
				break;
			}
		} while (ch != 9);

	}

}
//Task - Complete the other menu options of this app.....

