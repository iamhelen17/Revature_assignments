package com.app.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.app.dao.PlayerCrudDAO;
import com.app.dao.dbutil.PostgresqlConnection;
import com.app.exception.BusinessException;
import com.app.model.Player;

public class PlayerCrudDAOImpl implements PlayerCrudDAO {

	@Override
	public int createPlayer(Player player) throws BusinessException {
		int c = 0;
		try (Connection connection = PostgresqlConnection.getConnection()) {
			Statement statement = connection.createStatement();
			//String sql = "insert into test2.player1 (player_id, name, age, gender, contact, dob, team_id) values (?,?,?,?,?,?,?)";
			
			String sql = "insert into test2.player1 (player_id, name, age, gender, contact, dob, teamname join test2.team t on p.team_id=t.team_id) values (?,?,?,?,?,?,?)";
			
			//String sql = "select player_id, name, age, contact, dob, teamname from test2.player1 join team t on p.team_id=t.team_id where gender = ?";

			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			
			preparedStatement.setInt(1, player.getPlayer_id());
			preparedStatement.setString(2, player.getName());
			preparedStatement.setInt(3, player.getAge());
			preparedStatement.setString(4, player.getGender());
			preparedStatement.setString(5, player.getContact());
			preparedStatement.setDate(6, new java.sql.Date(player.getDob().getTime())); //converts util.Date to sql.Date
			preparedStatement.setString(7, player.getTeamname());
			
			c = preparedStatement.executeUpdate();
			
		} catch (ClassNotFoundException | SQLException e) {
			System.out.println(e); //Take off this line when app is live
			throw new BusinessException("Internal error occurred. Contact SYSADMIN");
		}
		return c;
	}

	@Override
	public void deletePlayer(int player_id) throws BusinessException {
		// TODO Auto-generated method stub
		//Task
		//String sql = "delete from test2.player1 where player_id=?"
		
		int d = 0;
		
		try (Connection connection = PostgresqlConnection.getConnection()) {
			String sql = "delete from test2.player1 where player_id=?";
			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			
			preparedStatement.setInt(1, player_id);
			
			d = preparedStatement.executeUpdate();
			
		} catch (ClassNotFoundException | SQLException e) {
			System.out.println(e); //Take off this line when app is live
			throw new BusinessException("Internal error occurred. Contact SYSADMIN");
		}
		
		return;
	}

	@Override
	public int updatePlayerContact(int player_id, String newContact) throws BusinessException {
		// TODO Auto-generated method stub
		//Task
		//String sql = "update test2.player1 set contact=? where id=?"
		
		int u = 0;
		
		try (Connection connection = PostgresqlConnection.getConnection()) {
			String sql = "update test2.player1 set contact=? where player_id=?";
			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			
			preparedStatement.setString(1, newContact);
			preparedStatement.setInt(2, player_id);
			
			
			u = preparedStatement.executeUpdate();
			
		} catch (ClassNotFoundException | SQLException e) {
			System.out.println(e); //Take off this line when app is live
			throw new BusinessException("Internal error occurred. Contact SYSADMIN");
		}
		return u;
		
	
	}

	@Override
	public Player getPlayerById(int player_id) throws BusinessException {
		Player player = null;
		try (Connection connection = PostgresqlConnection.getConnection()) {
			
			//String sql = "select name, age, gender, contact, dob,team_id from test2.player1 where player_id = ?";
			String sql = "select name, age, gender, contact, dob, teamname from test2.player1 join test2.team t on p.team_id=t.team_id where player_id = ?";

			
			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			
			preparedStatement.setInt(1, player_id);
			
			ResultSet resultSet = preparedStatement.executeQuery();
			
			if (resultSet.next()) {
				player = new Player();
				player.setPlayer_id(player_id);  //local
				player.setName(resultSet.getString("name"));
				player.setAge(resultSet.getInt("age"));
				player.setGender(resultSet.getString("gender"));
				player.setContact(resultSet.getString("contact"));
				player.setDob(resultSet.getDate("dob"));
				player.setTeamname(resultSet.getString("teamname"));
				
			} else {
				throw new BusinessException("No Player found with Player_id " +player_id);
			}
			
		}  catch (ClassNotFoundException | SQLException e) {
			System.out.println(e); //Take off this line when app is live
			throw new BusinessException("Internal error occurred. Contact SYSADMIN");
		}
		
		
		return player;
	}

	@Override
	public List<Player> getAllPlayers() throws BusinessException {
		List<Player> playersList = new ArrayList<>();
		
		try (Connection connection = PostgresqlConnection.getConnection()) {
			
			//String sql = "select player_id, name, age, gender, contact, dob,team_id from test2.player1";
			String sql = "select player_id, name, age, gender, contact, dob,teamname from test2.player1 join test2.team t on p.team_id=t.team_id";
			
			PreparedStatement preparedStatement = connection.prepareStatement(sql);
			
		
			ResultSet resultSet = preparedStatement.executeQuery();
			
			while (resultSet.next()) {                       //while loop since there are multiple players
				Player player = new Player();
				player.setPlayer_id(resultSet.getInt("player_id"));  
				player.setName(resultSet.getString("name"));
				player.setAge(resultSet.getInt("age"));
				player.setGender(resultSet.getString("gender"));
				player.setContact(resultSet.getString("contact"));
				player.setDob(resultSet.getDate("dob"));
				player.setTeamname(resultSet.getString("teamname"));
				playersList.add(player);
			} 
			if (playersList.size() == 0) {
				throw new BusinessException("No Players in the DB so far");
			}
			
		}  catch (ClassNotFoundException | SQLException e) {
			System.out.println(e); //Take off this line when app is live
			throw new BusinessException("Internal error occurred. Contact SYSADMIN");
		}
		
		
		return playersList;
	}

}
